프렌드 함수: 클래스의 멤버 함수가 아닌 외부함수로서 클래스의 멤버로 선언하기에는 무리가 있고, 클래스의 모든 멤버를 자유롭게 접근할 수 있는 일부 외부 함수 작성 시 사용한다.

예제 7-1

friend bool equals(Rect r, Rect s);를 사용하는 이유: 다음줄인 bool equals(Rect r, Rect s);에서 width와 height에 접근해야 하는데, width와 height는 private속성을 가져 평범한 방법으로는 접근할수 없다. 따라서 friend 함수를 사용하여 접근해야 한다.

프렌드는 캡슐화가 깨지기때문에 가급적 추천하지는 않는 방법이다. 하지만 필요하다면 사용해도 된다(지양)

연산자 중복

예제 7-8은 전위 ++ 연산자는 클래스의 참조 변수를 붙이고 변경된 객체 자신인 *this를 리턴해야 한다. 그렇게 하였을때 출력을 하면 먼저 a,b가 나오고 b = ++a를 계산을 하는데 ++이 앞에 있으면 a가 계산된 상태로 3번째 줄에 나타나고 ++이 뒤에 있다면 a가 계산되지 않은 상태로 출력될 것이다. 그러고 나서 4번째 줄은 ++a가 계산된 b가 출력되는 것이다.

프렌드를 이용한 연산자 중복: b=2+a를 b=2.+(a)로는 변환이 안 되지만, b=+(2,a)로는 변환이 된다는걸 알수있다.
따라서 Power operator+(int op1, Power op2) 이런식으로 변환이 가능함을 알수있다.

